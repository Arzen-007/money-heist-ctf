version: '3.8'

services:
  # Reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl/certs
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

  # Frontend React application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: production
    environment:
      - REACT_APP_API_URL=http://localhost/api
      - REACT_APP_WS_URL=ws://localhost/ws
    depends_on:
      - backend
    restart: unless-stopped

  # Backend FastAPI application
  backend:
    build:
      context: ./fastapi-backend
      dockerfile: ../Dockerfile
      target: production
    environment:
      - DATABASE_URL=mysql+pymysql://ctf_user:ctf_pass@mariadb:3306/ctf_platform
      - REDIS_URL=redis://redis:6379/0
      - OPENSEARCH_URL=http://opensearch:9200
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this}
      - ALLOWED_ORIGINS=http://localhost,http://localhost:3000,http://frontend:80
    volumes:
      - ./fastapi-backend/app:/app/app
      - ./fastapi-backend/alembic:/app/alembic
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_started
      opensearch:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database
  mariadb:
    image: mariadb:10.11
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ctf_platform
      MYSQL_USER: ctf_user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-ctf_pass}
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./fastapi-backend/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "3306:3306"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-rootpassword}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # OpenSearch for analytics and search
  opensearch:
    image: opensearchproject/opensearch:2.11.1
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    ports:
      - "9200:9200"
      - "9600:9600"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MinIO for file storage
  minio:
    image: minio/minio:RELEASE.2023-12-20T01-00-47Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana for monitoring
  grafana:
    image: grafana/grafana:10.2.0
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - opensearch

  # Metabase for analytics
  metabase:
    image: metabase/metabase:latest
    environment:
      - MB_DB_TYPE=mysql
      - MB_DB_DBNAME=metabase
      - MB_DB_PORT=3306
      - MB_DB_USER=metabase_user
      - MB_DB_PASS=${METABASE_DB_PASSWORD:-metabase_pass}
      - MB_DB_HOST=mariadb
    ports:
      - "3001:3000"
    restart: unless-stopped
    depends_on:
      - mariadb

  # Celery worker for background tasks
  celery:
    build:
      context: ./fastapi-backend
      dockerfile: ../Dockerfile
      target: production
    command: celery -A app.core.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=mysql+pymysql://ctf_user:ctf_pass@mariadb:3306/ctf_platform
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./fastapi-backend/app:/app/app
    depends_on:
      - redis
      - mariadb
    restart: unless-stopped

volumes:
  mariadb_data:
  redis_data:
  opensearch_data:
  minio_data:
  grafana_data:
